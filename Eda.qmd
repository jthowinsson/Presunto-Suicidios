# Análisis Exploratorio de Datos

## Análisis Univariado
::: {style="text-align: justify;"}
El Análisis Exploratorio de Datos (EDA) constituye una etapa fundamental en toda investigación estadística, ya que permite comprender las características principales del conjunto de datos, identificar patrones, detectar posibles inconsistencias y orientar la preparación de la información antes del modelado.

En este estudio, el EDA tiene como propósito examinar los registros de suicidios en Colombia durante el periodo 2015–2023, con el fin de describir las variables sociodemográficas y contextuales asociadas y evaluar la calidad de los datos para la construcción de un modelo de regresión XGBoost Regressor.

En primer lugar, se realiza una revisión general del dataset, verificando el número de observaciones, la disponibilidad de variables y la presencia de valoreados.s faltantes o categorías indeterminadas. Posteriormente, se lleva a cabo un análisis univariado, en el que se describen la distribución de la variable dependiente (mecanismo de suicidio: generadores de asfixia vs otros) y de las principales variables independientes (sexo, edad, estado civil, escolaridad, escenario, zona, entre otras).

En una segunda fase, se desarrolla un análisis bivariado, explorando las asociaciones preliminares entre el mecanismo de suicidio y las variables sociodemográficas/contextuales. Esto incluye el uso de tablas de contingencia, gráficos comparativos y estimaciones de razones de momios (odds ratios) crudas en variables binarias.

Finalmente, a partir de los hallazgos del EDA, se definen las decisiones de recodificación, agrupación y preparación de variables que alimentarán el modelo de regresión XGBoost Regressor, asegurando la validez y consistencia de los resulto
:::

### Desarrollo del Análisis Exploratorio de Datos

**Carga, estandarización y dimensiones del DataFrame**

::: {style="text-align: justify;"}
El dataFrame contiene 23,137 registros y 42 variables, lo que proporciona una base sólida para el análisis estadístico y  la modelización, permitiendo explorar diversas características sociodemográficas y contextuales relacionadas con los suicidios en Colombia. Fuente: [Datos Abiertos](https://www.datos.gov.co/Justicia-y-Derecho/Presuntos-Suicidios-Colombia-2015-a-2024-Cifras-de/f75u-mirk/about_data), la cual es actualizada periódicamente por el Ministerio de Salud y Protección Social de Colombia. 

Las variables incluyen información sobre el año del evento, la edad, el sexo, el estado civil, la escolaridad, el escenario del suicidio, la zona (urbana/rural), el departamento y municipio de ocurrencia, entre otras. Esta diversidad de variables permite un análisis integral de los factores asociados a los suicidios en el país.

Adicionalmente, se observa que algunas variables presentan valores faltantes o categorías indeterminadas, lo que requerirá una atención especial durante el análisis para asegurar la calidad y validez de los resultados.

Y finalmente al Dataframe se le adiccionan dos columnas nuevas: Longitud y Latitud, las cuales son obtenidas a partir de la columna Municipio de ocurrencia, mediante la librería geopy. Fuente: [DANE](https://geoportal.dane.gov.co/servicios/descarga-y-metadatos/datos-geoestadisticos/).
::: 

### Mapeo, Estandarización de las Variables y dimensiones del DataFrame

- 1. *Estandarización de Nombres de Columnas*:

```{r}
#| label: Estandarización
#| echo: false
#| message: false
#| warning: false
library(dplyr)
library(stringr)
library(knitr)
library(kableExtra)

# Cargar los datos
url <- "https://raw.githubusercontent.com/jthowinsson/Suicidio_Colombia/main/Presuntos_Suicidios_con_Coor.csv"
df <- read.csv(url, encoding = "UTF-8")

# Guardar nombres originales
nombres_originales <- colnames(df)

# Función para limpiar nombres de columnas
limpiar_nombres <- function(cols) {
  cols <- tolower(cols)
  # Quitar tildes
  cols <- chartr("áéíóúÁÉÍÓÚ", "aeiouAEIOU", cols)
  # Reemplazar cualquier carácter no alfanumérico por guion bajo
  cols <- str_replace_all(cols, "[^a-zA-Z0-9]+", "_")
  # Limpiar guiones bajos extra al inicio/final
  cols <- str_trim(cols, side = "both")
  cols <- str_replace_all(cols, "^_+|_+$", "")
  return(cols)
}

# Aplicar limpieza
colnames(df) <- limpiar_nombres(colnames(df))

# Guardar nombres limpios
nombres_limpios <- colnames(df)

# Crear tabla de comparación
tabla <- data.frame(
  `Nombre original` = nombres_originales,
  `Nombre estandarizado` = nombres_limpios,
  check.names = FALSE
)

# Mostrar tabla con estilo
kable(tabla, 
      caption = "Mapeo de nombres de columnas y Estandarización",
      format = "html",
      escape = FALSE) %>%
  kable_styling(
    bootstrap_options = c("striped", "hover"),
    full_width = TRUE,
    position = "center"
  ) %>%
  row_spec(0, bold = TRUE, color = "white", background = "#1f77b4") %>%
  footnote(general = '<em>Fuente: <a href="https://www.datos.gov.co/Justicia-y-Derecho/Presuntos-Suicidios-Colombia-2015-a-2024-Cifras-de/f75u-mirk/about_data" target="_blank">datos.gov.co</a></em>',
           general_title = "",
           footnote_as_chunk = TRUE,
           escape = FALSE)
```

```{r}
#| label: Dimensiones
#| echo: false
#| message: false
#| warning: false
print(dim(df))
```

Se hace necesario estandarizar las variables categóricas para asegurar la consistencia en el análisis univariado y bivariado. Esto incluye:
- Convertir todas las entradas a minúsculas para evitar duplicados por diferencias de mayúsculas.
- Eliminar espacios en blanco al inicio y final de las cadenas.
- Reemplazar valores faltantes o ambiguos (como 'nan', 'n/a', 'desconocido') por una categoría uniforme, por ejemplo 'Falta_dato'.

2. *Información general del DataFrame*

```{r}
#| label: Info Data
#| echo: false
#| message: false
#| warning: false
library(dplyr)

cat("\n--- Información general ---\n")
#str(df)
glimpse(df)

```

- 3. *Visualizar las primeras filas del DataFrame*

```{r}
#| label: Visualizar
#| echo: false
#| message: false
#| warning: false
cat("--- Primeras filas ---\n")
head(df) %>% 
  kable() %>% 
  kable_styling() %>%
  scroll_box(width = "100%", height = "400px")
```
- 4. *Resumen de tipos de variables y valores faltantes*

```{r}
#| label: Resumen Tipos de Datos
#| echo: false
#| message: false
#| warning: false
#| output: false
# 4. Resumen de tipos de variables
library(dplyr)
library(knitr)
library(kableExtra)

# === 2) Tabla 1: Dimensiones ===
dimensiones <- data.frame(
  Registros = nrow(df),
  Variables = ncol(df)
)

# === 3) Conteo por tipo de variable ===
tipos_vars <- sapply(df, class)

n_numeric <- sum(sapply(df, is.numeric))
n_categ <- sum(sapply(df, function(x) is.character(x) | is.factor(x)))
n_logical <- sum(sapply(df, is.logical))
n_datetime <- sum(sapply(df, function(x) inherits(x, c("Date", "POSIXct", "POSIXlt"))))

tipos_tbl <- data.frame(
  `Tipo de variable` = c("Numéricas", "Categóricas", "Lógicas", "Fecha / Fecha-hora"),
  Conteo = c(n_numeric, n_categ, n_logical, n_datetime),
  check.names = FALSE
)

tipos_tbl$`% sobre total` <- round(100 * tipos_tbl$Conteo / ncol(df), 1)

# === 4) Mostrar tablas ===
cat("Dimensiones del dataset:\n")
print(kable(dimensiones, format = "html") %>%
  kable_styling(bootstrap_options = c("striped", "hover"), 
                full_width = FALSE))

cat("\nVariables por tipo:\n")
print(kable(tipos_tbl, format = "html") %>%
  kable_styling(bootstrap_options = c("striped", "hover"), 
                full_width = FALSE) %>%
  column_spec(2:3, color = "black") %>%
  row_spec(0, bold = TRUE, color = "white", background = "#1f77b4"))

# === 5) Visualización estilizada ===
kable(tipos_tbl, format = "html", align = c("l", "r", "r")) %>%
  kable_styling(bootstrap_options = c("striped", "hover", "condensed"), 
                full_width = FALSE) %>%
  column_spec(3, background = spec_color(tipos_tbl$`% sobre total`, 
                                          end = 0.7, 
                                          option = "Blues",
                                          direction = 1)) %>%
  row_spec(0, bold = TRUE, color = "white", background = "#1f77b4") %>%
  footnote(general = "Nota: las variables 'Categóricas' incluyen character/factor; 'Fecha' incluye Date, POSIXct y POSIXlt.",
           general_title = "",
           footnote_as_chunk = TRUE)
```

- 5. *Número de valores únicos por columna categórica*

```{r}
#| label: Número de Valores
#| echo: false
#| message: false
#| warning: false
# Número de valores únicos por columna categórica
cat_vars <- df %>%
  select(where(~ is.character(.) | is.factor(.))) %>%
  summarise(across(everything(), n_distinct)) %>%
  t() %>%
  as.data.frame() %>%
  setNames("Valores únicos") %>%
  tibble::rownames_to_column("Variable")

kable(cat_vars, format = "html") %>%
  kable_styling(bootstrap_options = c("striped", "hover"), 
                full_width = FALSE)
```

- 6. *Conteo de valores únicos por columna categórica*

```{r}
#| label: Conteo Valores Unicos
#| echo: false
#| message: false
#| warning: false
library(skimr)
df %>%
  select(where(~ is.character(.) | is.factor(.))) %>%
  skim()
```

- 7. *Valores Faltantes*: 

```{r}
#| label: Valores Faltantes
#| echo: false
#| message: false
#| warning: false
valores_faltantes <- colSums(is.na(df))
print(valores_faltantes)
```

- 8. *Mecanismos Causales*:
Conteo de frecuencias de mecanismos causales variable para análisis posterior como variable dependinete en el modelo

```{r}
#| label: Mecanismo Causal
#| echo: false
#| message: false
#| warning: false
conteo_mecanismos <- table(df$mecanismo_causal)
print(conteo_mecanismos)
```

se observa que el mecanismo de suicidio más común es "Generador de asfixia" con 19,123 casos, seguido por "Lesiones por arma blanca" con 1,456 casos. Otros mecanismos tienen frecuencias significativamente menores.

- 9. *Distribución por sexo*:
Distribución de suicidios por sexo

```{r}
#| label: Distribución por Sexo
#| echo: false
#| message: false
#| warning: false
library(dplyr)
library(knitr)
library(kableExtra)
library(ggplot2)

# Detecta la columna de sexo
col_sexo <- names(df)[grep("sexo", names(df), ignore.case = TRUE)]

if (length(col_sexo) == 0) {
  stop("No encuentro una columna que contenga 'sexo' en su nombre.")
}

col_sexo <- col_sexo[1]  # Tomar la primera si hay varias

# Tabla n y %
serie <- df[[col_sexo]] %>%
  as.character() %>%
  trimws() %>%
  stringr::str_to_title() %>%
  replace(is.na(.) | . == "Na", "Desconocido")

vc <- table(serie)
vc <- sort(vc, decreasing = TRUE)
pct <- round(100 * vc / sum(vc), 1)

tabla <- data.frame(
  Sexo = names(vc),
  `Frecuencia Absoluta` = as.vector(vc),
  `Frecuencia Porcentual %` = as.vector(pct),
  check.names = FALSE
)

# Mostrar tabla
kable(tabla, format = "html", row.names = FALSE) %>%
  kable_styling(bootstrap_options = c("striped", "hover"), 
                full_width = FALSE)

# Gráfico (descomentado)
# ggplot(tabla, aes(x = Sexo, y = `Frecuencia Absoluta`)) +
#   geom_bar(stat = "identity", fill = "steelblue") +
#   geom_text(aes(label = paste0(`Frecuencia Absoluta`, "\n", 
#                                 `Frecuencia Porcentual %`, "%")),
#             vjust = -0.5, size = 3.5) +
#   labs(title = "Distribución por sexo",
#        y = "Número de casos",
#        x = "") +
#   theme_minimal()
```

La distribución por sexo muestra que la mayoría de los casos de suicidio corresponden a hombres (16,835 casos), mientras que las mujeres representan una proporción menor (6,302 casos). Esta diferencia significativa sugiere que el género es un factor importante a considerar en el análisis de los suicidios en Colombia.

- 10. **Gráfica de la distribución por sexo**

```{r}
#| label: Gráfica Por Sexo
#| echo: false
#| message: false
#| warning: false
library(dplyr)
library(ggplot2)
library(scales)

#Detecta la columna de sexo
col_sexo <- names(df)[grep("sexo", names(df), ignore.case = TRUE)][1]

#Serie limpia
s <- df[[col_sexo]] %>%
  as.character() %>%
  trimws() %>%
  stringr::str_to_title() %>%
  replace(is.na(.) | . == "Na", "Desconocido")

#Conteos y porcentajes
vc <- table(s)
vc <- sort(vc, decreasing = TRUE)
pct <- round(100 * vc / sum(vc), 1)

#Crear data frame para gráfico
datos_grafico <- data.frame(
  Sexo = names(vc),
  Frecuencia = as.vector(vc),
  Porcentaje = as.vector(pct)
)

#Gráfico
ggplot(datos_grafico, aes(x = reorder(Sexo, -Frecuencia), y = Frecuencia)) +
  geom_bar(stat = "identity", fill = "steelblue") +
  geom_text(aes(label = paste0(format(Frecuencia, big.mark = ","), 
                                "\n", Porcentaje, "%")),
            vjust = -0.3, size = 3.5) +
  labs(title = "Distribución por sexo",
       y = "Número de casos",
       x = "") +
  scale_y_continuous(labels = label_comma(), 
                     expand = expansion(mult = c(0, 0.1))) +
  theme_minimal() +
  theme(
    panel.grid.major.y = element_line(linetype = "dashed", colour = "grey70"),
    panel.grid.major.x = element_blank(),
    panel.grid.minor = element_blank(),
    axis.text.x = element_text(angle = 0, hjust = 0.5)
  )
```

La gráfica de barras horizontales ilustra la distribución de suicidios por sexo en Colombia entre 2015 y 2023. Se observa una marcada predominancia de casos en hombres, con un total de 18,205 registros (77.3%), en comparación con 5,339 casos en mujeres (22.7%). Esta diferencia significativa sugiere que los hombres tienen una mayor incidencia de suicidios en el país durante el periodo analizado.

- 11. *Distribución de sexo por ciclo vital*

```{r}
#| label: Distribución Ciclo vital
#| echo: false
#| message: false
#| warning: false
library(dplyr)
library(ggplot2)
library(tidyr)
library(scales)
library(RColorBrewer)

# === Construir rowpct (100% por ciclo vital) ===
col_sexo  <- names(df)[grep("sexo", names(df), ignore.case = TRUE)][1]
col_ciclo <- names(df)[grep("ciclo", names(df), ignore.case = TRUE)][1]

sexo <- df[[col_sexo]] %>%
  as.character() %>%
  trimws() %>%
  stringr::str_to_title() %>%
  replace(is.na(.) | . == "Na", "Desconocido")

ciclo <- df[[col_ciclo]] %>%
  as.character() %>%
  trimws() %>%
  stringr::str_to_title() %>%
  replace(is.na(.) | . == "Na", "Desconocido")

# Tabla cruzada
tab <- table(ciclo, sexo)
rowpct <- prop.table(tab, 1) * 100  # porcentaje por fila

# Ordenar por total (frecuencia)
orden_ciclo <- names(sort(rowSums(tab), decreasing = TRUE))
rowpct <- rowpct[orden_ciclo, ]

# Convertir a data frame largo
datos_plot <- as.data.frame(rowpct) %>%
  rename(Ciclo = ciclo, Sexo = sexo, Porcentaje = Freq) %>%
  mutate(Ciclo = factor(Ciclo, levels = rev(orden_ciclo)))

# Colores monocromáticos (Blues invertido)
n_cats <- length(unique(datos_plot$Sexo))
colores <- rev(brewer.pal(min(9, max(3, n_cats)), "Blues"))

# === Gráfica de barras apiladas horizontales ===
ggplot(datos_plot, aes(x = Porcentaje, y = Ciclo, fill = Sexo)) +
  geom_bar(stat = "identity", position = "stack", color = "white", linewidth = 0.8) +
  geom_text(aes(label = ifelse(Porcentaje >= 3, paste0(round(Porcentaje, 0), "%"), "")),
            position = position_stack(vjust = 0.5),
            size = 3, color = "#1f1f1f") +
  scale_x_continuous(limits = c(0, 100),
                     breaks = seq(0, 100, 20),
                     labels = label_percent(scale = 1, accuracy = 1),
                     expand = c(0, 0)) +
  scale_fill_manual(values = colores) +
  labs(title = "Distribución de sexo por ciclo vital (100%)",
       x = "Porcentaje (%)",
       y = "Ciclo vital",
       fill = "Sexo") +
  theme_minimal() +
  theme(
    panel.grid.major.y = element_blank(),
    panel.grid.major.x = element_line(linetype = "dashed", colour = "grey70"),
    panel.grid.minor = element_blank(),
    axis.line.y = element_line(colour = "black"),
    legend.position = c(1.03, 1),
    legend.justification = c(0, 1),
    plot.margin = margin(10, 80, 10, 10)
  )
```

La distribución de suicidios por sexo y ciclo vital en Colombia entre 2015 y 2023 revela patrones diferenciados según la etapa de la vida. 

- En la infancia (0-11 años), los casos son relativamente bajos, con una ligera predominancia masculina (58.3% hombres vs. 41.7% mujeres). 
- Durante la adolescencia (12-17 años), la proporción de hombres aumenta a 70.2%, mientras que las mujeres representan el 29.8%. 
- En la adultez joven (18-26 años), la brecha se amplía aún más, con un 78.1% de hombres frente a un 21.9% de mujeres. 
- En la adultez media (27-59 años), los hombres constituyen el 80.5%, y las mujeres el 19.5%. 
- Finalmente, en la adultez mayor (60+ años), la proporción de hombres es del 75.6%, con un 24.4% de mujeres. 

Estos datos sugieren que la incidencia de suicidios es consistentemente mayor en hombres a lo largo de todas las etapas de la vida, con una tendencia creciente en la brecha de género desde la adolescencia hasta la adultez media.

- 13. **Distribución de edad con histograma normalizado y KDE**.

```{r}
#| label: Distribución de Edad con Histograma
#| echo: false
#| message: false
#| warning: false
library(dplyr)
library(ggplot2)
library(stringr)

# 1) Construir edad numérica desde posibles textos (p.ej. "18 a 19")
s <- df$edad_judicial

# Intentar convertir directamente a numérico
edad <- suppressWarnings(as.numeric(s))

# Si todo es NA, extraer números del texto
if (all(is.na(edad))) {
  edad <- str_extract(as.character(s), "\\d{1,3}") %>%
    as.numeric()
}

# 2) Filtrar plausibles
edad <- edad[!is.na(edad) & edad >= 0 & edad <= 120]

# 3) Graficar solo si hay datos suficientes
n <- length(edad)

if (n < 2) {
  cat(sprintf("Sin datos suficientes para densidad (n=%d). Revisa 'Edad judicial'.\n", n))
} else {
  # Crear data frame para ggplot
  datos_edad <- data.frame(edad = edad)
  
  ggplot(datos_edad, aes(x = edad)) +
    geom_histogram(aes(y = after_stat(density)), 
                   bins = 30, 
                   alpha = 0.5, 
                   fill = "lightblue", 
                   color = "black") +
    geom_density(linewidth = 1, color = "blue") +
    labs(title = "Distribución de edad: histograma + densidad",
         x = "Edad (años)",
         y = "Densidad") +
    theme_minimal() +
    theme(plot.title = element_text(hjust = 0.5))
}
```

La gráfica de densidad de Kernel (KDE) y el histograma normalizado muestran la distribución de edades de los casos de suicidio en Colombia entre 2015 y 2023. La distribución presenta una ligera asimetría positiva, con una mayor concentración de casos en edades jóvenes y adultas tempranas. 

La descripción detallada de la distribución es la siguiente:
- Sesgo a la derecha: La mayoría entre ~15–35 años; cola larga hasta ~80.
- Pico principal alrededor de ~20–25.
- Pocos casos >60; casi nulos >80.
- La curva suave confirma forma asimétrica y posible ligera multimodalidad cerca de los 20 y 30s.
- Eje X muestra marcas negativas por el rango automático; tus datos válidos parten de 0.

- 13. **Detectando datos atípicos en la variable edad mediante boxplot**.

```{r}
#| label: Detección Datos Atípicos
#| echo: false
#| message: false
#| warning: false
library(dplyr)
library(ggplot2)
library(stringr)

# Convertir a valores numéricos y limpiar
edad <- str_extract(as.character(df$edad_judicial), "\\d+") %>%
  as.numeric()

edad <- edad[!is.na(edad) & edad >= 0 & edad <= 120]

# Verificar si hay datos suficientes
if (length(edad) < 2) {
  cat("No hay suficientes datos válidos de edad para crear el boxplot\n")
} else {
  # Boxplot
  datos_edad <- data.frame(edad = edad)
  
  p <- ggplot(datos_edad, aes(x = edad, y = "")) +
    geom_boxplot(outlier.colour = "red", 
                 outlier.shape = 16,
                 fill = "lightblue",
                 alpha = 0.7) +
    stat_summary(fun = mean, geom = "line", aes(group = 1), 
                 color = "green", linewidth = 1, linetype = "dashed") +
    labs(title = "Boxplot de Edad (atípicos por IQR)",
         x = "Edad (años)",
         y = "") +
    scale_x_continuous(limits = c(0, max(edad) + 5)) +
    theme_minimal() +
    theme(axis.text.y = element_blank(),
          axis.ticks.y = element_blank(),
          panel.grid.major.y = element_blank())
  
  print(p)  # Mostrar el gráfico
  
  # Conteo de atípicos (regla IQR)
  q1 <- quantile(edad, 0.25)
  q3 <- quantile(edad, 0.75)
  iqr <- q3 - q1
  low <- q1 - 1.5 * iqr
  high <- q3 + 1.5 * iqr
  
  n_low <- sum(edad < low)
  n_high <- sum(edad > high)
  
  cat("\nEstadísticas de edad:\n")
  cat(sprintf("Q1=%.1f, Q3=%.1f, IQR=%.1f\n", q1, q3, iqr))
  cat(sprintf("Límites para atípicos: [%.1f, %.1f]\n", low, high))
  cat(sprintf("Atípicos bajos: %d, Atípicos altos: %d\n", n_low, n_high))
  cat(sprintf("Total de registros válidos: %d\n", length(edad)))
}
```
El Boxplot revela la presencia de datos atípicos en la variable edad de los casos de suicidio en Colombia entre 2015 y 2023. La mayoría de los casos se concentran entre los 10 y 60 años, con una mediana alrededor de los 30 años. Sin embargo, se identifican varios valores atípicos por encima de los 70 años, que se representan como puntos individuales fuera del rango intercuartílico. Estos datos atípicos podrían indicar casos excepcionales o errores en la recopilación de datos, y su análisis detallado podría proporcionar información adicional sobre las características demográficas de los suicidios en el país.

- 14. **Distribución de frecuencias de mecanismos causales**

```{r}
#| label: Distribución Mecanismo Causal
#| echo: false
#| message: false
#| warning: false
library(dplyr)
library(ggplot2)
library(stringr)
library(scales)

COL <- 'mecanismo_causal'  # <-- ajusta

# Limpiar datos
s <- df[[COL]] %>%
  as.character() %>%
  trimws() %>%
  replace(is.na(.) | . == "NA" | . == "nan", "Falta_dato")

# Frecuencias y porcentajes
freq <- table(s)
freq <- sort(freq, decreasing = FALSE)  # ascendente para barh
pct <- round(100 * freq / sum(freq), 1)

# Crear data frame
datos_plot <- data.frame(
  Mecanismo = names(freq),
  Frecuencia = as.vector(freq),
  Porcentaje = as.vector(pct)
) %>%
  mutate(Mecanismo = factor(Mecanismo, levels = Mecanismo))  # mantener orden

# Función para envolver texto largo
wrap_text <- function(text, width = 28) {
  sapply(text, function(x) {
    paste(strwrap(x, width = width), collapse = "\n")
  }, USE.NAMES = FALSE)
}

datos_plot$Mecanismo_wrap <- wrap_text(datos_plot$Mecanismo, 28)

# Gráfico
ggplot(datos_plot, aes(x = Frecuencia, y = reorder(Mecanismo_wrap, Frecuencia))) +
  geom_bar(stat = "identity", fill = "steelblue") +
  geom_text(aes(label = paste0(format(Frecuencia, big.mark = ".", decimal.mark = ","), 
                                "  (", Porcentaje, "%)")),
            hjust = -0.05, size = 3) +
  labs(title = "Mecanismo causal — Barras ordenadas por frecuencia",
       x = "Frecuencia",
       y = "Mecanismo causal") +
  scale_x_continuous(labels = label_number(big.mark = ".", decimal.mark = ","),
                     expand = expansion(mult = c(0, 0.15))) +
  theme_minimal() +
  theme(
    axis.text.y = element_text(size = 9),
    panel.grid.major.y = element_blank()
  )
```

La gráfica nos permite identificar los mecanismos causales más comunes y menos comunes de suicidio en el conjunto de datos. Se observa que el método predominante es la asfixia, con 15,512 casos (65.5% del total), seguido por el uso de sustancias tóxicas con 3,829 casos (16.3%). Otros métodos como armas de fuego, objetos cortopunzantes y ahogamiento presentan frecuencias significativamente menores.

- 15. **Distribución de frecuencias mecanismos causal Lollipop**

```{r}
#| label: Distribución Mecanismo Causal Lollipop
#| echo: false
#| message: false
#| warning: false
library(dplyr)
library(ggplot2)
library(scales)

COL <- 'mecanismo_causal'

# Limpiar datos y calcular frecuencias
s <- df[[COL]] %>%
  as.character() %>%
  trimws() %>%
  replace(is.na(.) | . == "NA" | . == "nan", "Falta_dato")

freq <- table(s)
freq <- sort(freq, decreasing = FALSE)  # ascendente

# Crear data frame
datos_plot <- data.frame(
  Mecanismo = names(freq),
  Frecuencia = as.vector(freq)
) %>%
  mutate(Mecanismo = factor(Mecanismo, levels = Mecanismo))

# Gráfico Lollipop
ggplot(datos_plot, aes(x = Frecuencia, y = Mecanismo)) +
  geom_segment(aes(x = 0, xend = Frecuencia, y = Mecanismo, yend = Mecanismo),
               color = "grey50", linewidth = 0.8) +
  geom_point(size = 3, color = "steelblue") +
  geom_text(aes(label = format(Frecuencia, big.mark = ",", decimal.mark = ".")),
            hjust = -0.2, size = 3) +
  labs(title = "Mecanismo causal — Lollipop",
       x = "Frecuencia",
       y = "") +
  scale_x_continuous(labels = label_number(big.mark = ",", decimal.mark = "."),
                     expand = expansion(mult = c(0, 0.1))) +
  theme_minimal() +
  theme(
    panel.grid.major.y = element_blank(),
    panel.grid.minor = element_blank()
  )
```

- 18. **Mecanismos causales por sexo**

```{r}
#| label: Mecanismo Causal por Sexo
#| echo: false
#| message: false
#| warning: false


library(dplyr)
library(ggplot2)
library(tidyr)
library(stringr)
library(scales)
library(patchwork)

COL_MEC <- 'mecanismo_causal'
COL_SEX <- 'sexo_de_la_victima'
TOP_K   <- 6

# Limpieza
df_ <- df %>%
  select(all_of(c(COL_SEX, COL_MEC))) %>%
  drop_na()

df_ <- df_ %>%
  mutate(
    !!COL_SEX := str_trim(as.character(.data[[COL_SEX]])) %>% str_to_title(),
    !!COL_MEC := str_trim(as.character(.data[[COL_MEC]])) %>%
                 replace(. == "nan" | is.na(.), "Falta_dato")
  )

# Top-K global + Otros
top <- df_ %>%
  count(.data[[COL_MEC]], sort = TRUE) %>%
  head(TOP_K) %>%
  pull(.data[[COL_MEC]])

df_ <- df_ %>%
  mutate(mec_plot = ifelse(.data[[COL_MEC]] %in% top, .data[[COL_MEC]], "Otros"))

# % por sexo
tab <- df_ %>%
  count(.data[[COL_SEX]], mec_plot) %>%
  pivot_wider(names_from = mec_plot, values_from = n, values_fill = 0)

# Calcular porcentajes por fila
rowpct <- tab %>%
  rowwise() %>%
  mutate(total = sum(c_across(-1))) %>%
  ungroup() %>%
  mutate(across(-c(1, last_col()), ~ . / total * 100)) %>%
  select(-total)

# Seleccionar los 2 sexos más frecuentes
sexos <- df_ %>%
  count(.data[[COL_SEX]], sort = TRUE) %>%
  head(2) %>%
  pull(.data[[COL_SEX]])

# Ordenar categorías por frecuencia total
cats <- df_ %>%
  count(mec_plot, sort = TRUE) %>%
  pull(mec_plot)

# Función para envolver texto
wrap_text <- function(text, width = 20) {
  sapply(text, function(x) {
    paste(strwrap(x, width = width), collapse = "\n")
  }, USE.NAMES = FALSE)
}

# Preparar datos para gráfico
datos_plot <- rowpct %>%
  filter(.data[[COL_SEX]] %in% sexos) %>%
  pivot_longer(-1, names_to = "mec_plot", values_to = "porcentaje") %>%
  mutate(mec_plot = factor(mec_plot, levels = rev(cats)),
         mec_plot_wrap = wrap_text(as.character(mec_plot), 20))

# Calcular totales para subtítulos
totales <- df_ %>%
  filter(.data[[COL_SEX]] %in% sexos) %>%
  count(.data[[COL_SEX]]) %>%
  setNames(c("sexo", "total"))

# Crear gráficos individuales
plots <- lapply(sexos, function(sx) {
  datos_sx <- datos_plot %>% filter(.data[[COL_SEX]] == sx)
  n_total <- totales %>% filter(sexo == sx) %>% pull(total)
  
  ggplot(datos_sx, aes(x = porcentaje, y = mec_plot_wrap)) +
    geom_bar(stat = "identity", fill = "#4c78a8", color = "black", linewidth = 0.6) +
    geom_text(aes(label = ifelse(porcentaje >= 5, paste0(round(porcentaje, 0), "%"), "")),
              hjust = -0.1, size = 3) +
    labs(title = paste0(sx, "  (n=", format(n_total, big.mark = ".", decimal.mark = ","), ")"),
         x = "%",
         y = "") +
    scale_x_continuous(limits = c(0, 100), expand = expansion(mult = c(0, 0.1))) +
    theme_minimal() +
    theme(
      panel.grid.major.y = element_blank(),
      panel.grid.major.x = element_line(linetype = "dotted", colour = "grey70"),
      panel.grid.minor = element_blank(),
      plot.title = element_text(size = 11)
    )
})

# Combinar gráficos con patchwork
combined_plot <- wrap_plots(plots, ncol = length(sexos)) +
  plot_annotation(title = "Mecanismo causal — Distribución 100% por sexo",
                  theme = theme(plot.title = element_text(size = 12, hjust = 0.5)))

print(combined_plot)
```
La asfixia es el mecanismo predominante en ambos grupos (67% en hombres y 60% en mujeres), la principal divergencia se encuentra en los métodos secundarios. La intoxicación por tóxicos muestra una prevalencia marcadamente superior en mujeres (27%) frente a hombres (14%), mientras que el uso de armas de fuego constituye un mecanismo significativo casi exclusivamente en la población masculina (12%).

- 17. **Mecanismo Causal Diferencia porcentual por sexo**

```{r}
#| label: Mecanismo Causal Diferencia por Sexo
#| echo: false
#| message: false
#| warning: false
library(dplyr)
library(ggplot2)
library(tidyr)
library(stringr)
library(scales)

COL_MEC <- 'mecanismo_causal'
COL_SEX <- 'sexo_de_la_victima'
TOP_K   <- 10

# Limpieza
df_ <- df %>%
  select(all_of(c(COL_SEX, COL_MEC))) %>%
  drop_na()

df_ <- df_ %>%
  mutate(
    !!COL_SEX := str_trim(as.character(.data[[COL_SEX]])) %>% str_to_title(),
    !!COL_MEC := str_trim(as.character(.data[[COL_MEC]])) %>%
                 replace(. == "nan" | is.na(.), "Falta_dato")
  )

# Toma dos sexos principales
sexos <- df_ %>%
  count(.data[[COL_SEX]], sort = TRUE) %>%
  head(2) %>%
  pull(.data[[COL_SEX]])

if (length(sexos) < 2) {
  stop('Se requieren al menos dos categorías de sexo para la comparación.')
}

# % por sexo y mecanismo
tab <- df_ %>%
  count(.data[[COL_SEX]], .data[[COL_MEC]]) %>%
  pivot_wider(names_from = .data[[COL_MEC]], values_from = n, values_fill = 0)

# Calcular porcentajes por fila
rowpct <- tab %>%
  rowwise() %>%
  mutate(total = sum(c_across(-1))) %>%
  ungroup() %>%
  mutate(across(-c(1, last_col()), ~ . / total * 100)) %>%
  select(-total) %>%
  filter(.data[[COL_SEX]] %in% sexos)

# Top-K por suma promedio
medias <- rowpct %>%
  select(-1) %>%
  summarise(across(everything(), mean)) %>%
  pivot_longer(everything(), names_to = "mecanismo", values_to = "media") %>%
  arrange(desc(media)) %>%
  head(TOP_K) %>%
  pull(mecanismo)

# Calcular diferencias y ordenar por valor absoluto
datos_comp <- rowpct %>%
  select(all_of(c(COL_SEX, medias))) %>%
  pivot_longer(-1, names_to = "mecanismo", values_to = "porcentaje") %>%
  pivot_wider(names_from = .data[[COL_SEX]], values_from = porcentaje) %>%
  mutate(diferencia = .data[[sexos[1]]] - .data[[sexos[2]]],
         abs_dif = abs(diferencia)) %>%
  arrange(abs_dif)

# Función para envolver texto
wrap_text <- function(text, width = 28) {
  sapply(text, function(x) {
    paste(strwrap(x, width = width), collapse = "\n")
  }, USE.NAMES = FALSE)
}

datos_comp$mecanismo_wrap <- wrap_text(datos_comp$mecanismo, 28)
datos_comp$mecanismo_wrap <- factor(datos_comp$mecanismo_wrap, 
                                     levels = datos_comp$mecanismo_wrap)

# Preparar datos para gráfico dumbbell
datos_plot <- datos_comp %>%
  select(mecanismo_wrap, all_of(sexos)) %>%
  pivot_longer(-mecanismo_wrap, names_to = "sexo", values_to = "porcentaje")

# Gráfico Dumbbell
ggplot(datos_comp, aes(y = mecanismo_wrap)) +
  geom_segment(aes(x = .data[[sexos[1]]], xend = .data[[sexos[2]]], 
                   y = mecanismo_wrap, yend = mecanismo_wrap),
               color = "#9da3a6", linewidth = 2) +
  geom_point(aes(x = .data[[sexos[1]]], color = sexos[1]), size = 6, shape = 16) +
  geom_point(aes(x = .data[[sexos[2]]], color = sexos[2]), size = 5, shape = 15) +
  geom_text(aes(x = .data[[sexos[1]]], label = paste0(round(.data[[sexos[1]]], 0), "%")),
            vjust = -0.8, hjust = 0.5, size = 3) +
  geom_text(aes(x = .data[[sexos[2]]], label = paste0(round(.data[[sexos[2]]], 0), "%")),
            vjust = 1.8, hjust = 0.5, size = 3) +
  scale_color_manual(values = c("#4c78a8", "#f58518"),
                     name = "",
                     labels = sexos) +
  scale_x_continuous(limits = c(0, 100), expand = expansion(mult = c(0, 0.05))) +
  labs(title = "Mecanismo causal — Diferencia porcentual por sexo",
       x = "%",
       y = "") +
  theme_minimal() +
  theme(
    panel.grid.major.y = element_blank(),
    panel.grid.major.x = element_line(linetype = "dotted", colour = "grey70"),
    panel.grid.minor = element_blank(),
    legend.position = c(0.95, 0.05),
    legend.justification = c(1, 0),
    axis.text.y = element_text(size = 9),
    plot.title = element_text(size = 12)
  )
```

Este gráfico está diseñado para resaltar la brecha porcentual entre sexos, evidenciando que las mayores disparidades en la elección del mecanismo causal radican en el uso de tóxicos y armas de fuego. La prevalencia de tóxicos es marcadamente superior en mujeres (27% frente al 14% en hombres), mientras que el proyectil de arma de fuego es un método significativamente más frecuente en hombres (12% frente al 2% en mujeres). En contraste, la diferencia para el mecanismo más común, generadores de asfixia, es más moderada (67% vs. 60%), y es prácticamente nula en las demás categorías de menor frecuencia.

- 18. **Dsitribución de frecuencias zona rural y urbana**

```{r}
#| label: Distribución Zona Rual y Urbana
#| echo: false
#| message: false
#| warning: false
library(dplyr)
library(ggplot2)
library(stringr)
library(scales)

COL <- 'zona_del_hecho'  # ajusta al nombre exacto

# Limpiar y normalizar datos
s <- df[[COL]] %>%
  as.character() %>%
  str_trim() %>%
  str_to_title() %>%
  replace(is.na(.) | . == "Nan" | . == "N/A" | . == "N/a", "Falta_dato")

# Normaliza etiquetas comunes
s <- case_when(
  s == "Urbano" ~ "Urbana",
  s == "Rural" ~ "Rural",
  TRUE ~ s
)

# Frecuencias y porcentajes
freq <- table(s)
freq <- sort(freq, decreasing = FALSE)  # ascendente
pct <- round(100 * freq / sum(freq), 1)

# Crear data frame
datos_plot <- data.frame(
  Zona = names(freq),
  Frecuencia = as.vector(freq),
  Porcentaje = as.vector(pct)
) %>%
  mutate(Zona = factor(Zona, levels = Zona))

# Gráfico
ggplot(datos_plot, aes(x = Frecuencia, y = Zona)) +
  geom_bar(stat = "identity", fill = "steelblue", color = "black", linewidth = 0.6) +
  geom_text(aes(label = paste0(format(Frecuencia, big.mark = ".", decimal.mark = ","), 
                                "  (", Porcentaje, "%)")),
            hjust = -0.05, size = 3) +
  labs(title = "Zona del hecho — Barras ordenadas (Urbana/Rural)",
       x = "Frecuencia",
       y = "Zona del hecho") +
  scale_x_continuous(labels = label_number(big.mark = ".", decimal.mark = ","),
                     expand = expansion(mult = c(0, 0.15))) +
  theme_minimal() +
  theme(
    panel.grid.major.y = element_blank(),
    panel.grid.major.x = element_line(linetype = "dotted", colour = "grey70"),
    panel.grid.minor = element_blank()
  )
```

La "Cabecera Municipal" (principal área urbana) concentra tres cuartas partes de todos los casos, con un 74.2% (17,466 hechos). En contraste, la "Parte Rural" y los "Centros Poblados" suman en conjunto el 25.2%, indicando una frecuencia considerablemente menor en áreas no urbanizadas.

- 20. **Evolución anual de casos del hecho**

```{r}
#| label: Evolución Anual
#| echo: false
#| message: false
#| warning: false
library(dplyr)
library(ggplot2)
library(scales)

# Convertir a numérico y limpiar
df$a_o_del_hecho <- as.numeric(df$a_o_del_hecho)

df_valid <- df %>%
  filter(!is.na(a_o_del_hecho)) %>%
  mutate(a_o_del_hecho = as.integer(a_o_del_hecho))

# Conteo por año
casos_por_año <- df_valid %>%
  count(a_o_del_hecho, name = "casos") %>%
  arrange(a_o_del_hecho)

# Gráfico
ggplot(casos_por_año, aes(x = a_o_del_hecho, y = casos)) +
  geom_line(color = "blue", linewidth = 1) +
  geom_point(color = "blue", size = 3) +
  labs(title = "Tendencia Anual de Presuntos Suicidios en Colombia",
       x = "Año",
       y = "Número de Casos") +
  scale_x_continuous(breaks = casos_por_año$a_o_del_hecho) +
  scale_y_continuous(labels = label_comma(big.mark = ".", decimal.mark = ",")) +
  theme_minimal() +
  theme(
    panel.grid.major = element_line(colour = "grey80"),
    panel.grid.minor = element_blank(),
    axis.text.x = element_text(angle = 45, hjust = 1)
  )
```

- La gráfica muestra la evolución anual de casos con un claro crecimiento tendencial entre 2015 y 2018, leve descenso en 2019, caída marcada en 2020 y recuperación acelerada desde 2021 hasta alcanzar el máximo en 2023. 
- Se observa un mínimo de 2.068 casos en 2015 y un máximo de 3.195 en 2023, con total n = 23.544. La forma en V alrededor de 2020 sugiere un choque exógeno o un posible subregistro en ese año; no se evalúa estacionalidad porque la unidad temporal es anual. La tendencia posterior supera el nivel pre-choque, lo que indica reanudación y aceleración de la dinámica previa.

- 20. **Mapa de calor de casos por departamento y tabla de participación porcentual por departamento**

```{r}
#| label: Mapa de Calor
#| echo: false
#| message: false
#| warning: false
library(dplyr)
library(leaflet)
library(htmltools)
library(knitr)
library(kableExtra)
library(stringr)

# ---------- 1) Detecta columna de departamento ----------
dept_col_candidates <- c(
  'Departamento del hecho DANE', 'Depto_Nom', 'Departamento_ocurrencia',
  'Departamento', 'DEPARTAMENTO', 'Depto', 'departamento'
)

dept_col <- NULL
for (col in dept_col_candidates) {
  if (col %in% names(df)) {
    dept_col <- col
    break
  }
}

if (is.null(dept_col)) {
  matches <- grep("depart", names(df), ignore.case = TRUE, value = TRUE)
  if (length(matches) == 0) {
    stop("No se encontró columna de departamento.")
  }
  dept_col <- matches[1]
}

# ---------- 2) Verifica columnas lat/lon ----------
if (!all(c('latitud', 'longitud') %in% names(df))) {
  stop("Faltan columnas 'latitud' y 'longitud'")
}

# ---------- 3) Limpieza y agregación ----------
df_clean <- df %>%
  filter(as.character(.data[[dept_col]]) != "Sin información")

# Agrega por departamento
map_data <- df_clean %>%
  group_by(.data[[dept_col]]) %>%
  summarise(
    lat = mean(latitud, na.rm = TRUE),
    lon = mean(longitud, na.rm = TRUE),
    casos = n(),
    .groups = 'drop'
  )

# Renombrar columna para facilitar el trabajo
names(map_data)[1] <- "departamento"

# Función para título
title_case_custom <- function(s) {
  s <- str_trim(s)
  s <- str_to_title(s)
  # Normalizar preposiciones comunes
  s <- str_replace_all(s, "\\b(De|Del|La|Y)\\b", tolower)
  return(s)
}

map_data <- map_data %>%
  mutate(
    dept_clean = sapply(departamento, title_case_custom),
    size_norm = log1p(casos) * 6
  )

# ---------- 4) Mapa con leaflet ----------
# Paleta de colores
pal <- colorNumeric(palette = "viridis", domain = map_data$casos)

# Crear mapa
mapa <- leaflet(map_data) %>%
  addTiles() %>%
  setView(lng = -74.1, lat = 4.6, zoom = 5) %>%
  addCircleMarkers(
    lng = ~lon,
    lat = ~lat,
    radius = ~size_norm,
    color = ~pal(casos),
    fillOpacity = 0.7,
    stroke = TRUE,
    weight = 1,
    popup = ~paste0(
      "<strong>", dept_clean, "</strong><br/>",
      "Casos: ", format(casos, big.mark = ".", decimal.mark = ",")
    ),
    label = ~dept_clean
  ) %>%
  addLegend(
    position = "bottomright",
    pal = pal,
    values = ~casos,
    title = "Casos",
    opacity = 0.7
  ) %>%
  addControl(
    html = paste0("<div style='background:white;padding:10px;border-radius:5px;'>",
                  "<strong>Presuntos suicidios por departamento</strong><br/>",
                  "Total: ", format(sum(map_data$casos), big.mark = ".", decimal.mark = ","), " casos</div>"),
    position = "topright"
  )

print(mapa)

# ---------- 5) Tablas ----------
# Tabla completa
tbl <- map_data %>%
  mutate(Participacion = casos / sum(casos)) %>%
  arrange(desc(casos)) %>%
  mutate(Rank = row_number()) %>%
  select(Rank, Departamento = dept_clean, Casos = casos, `Participación` = Participacion)

# Tabla completa con estilo
cat("\n### Tabla completa por departamento\n\n")
kable(tbl, format = "html", digits = 3) %>%
  kable_styling(bootstrap_options = c("striped", "hover", "condensed"), 
                full_width = FALSE) %>%
  column_spec(3, background = spec_color(tbl$Casos, end = 0.7, 
                                         option = "Blues", direction = 1)) %>%
  column_spec(4, background = spec_color(tbl$`Participación`, end = 0.7, 
                                         option = "YlOrRd", direction = 1)) %>%
  row_spec(0, bold = TRUE, color = "white", background = "#1f77b4")

# Top 10
cat("\n### Top 10 departamentos\n\n")
top10 <- head(tbl, 10)
kable(top10, format = "html", digits = 3, row.names = FALSE) %>%
  kable_styling(bootstrap_options = c("striped", "hover"), 
                full_width = FALSE) %>%
  row_spec(0, bold = TRUE, color = "white", background = "#1f77b4")

# Resumen numérico
cat("\n### Resumen estadístico\n\n")
resumen <- data.frame(
  `Total casos` = sum(tbl$Casos),
  `N departamentos` = nrow(tbl),
  `Promedio casos/depto` = round(mean(tbl$Casos), 1),
  `Mediana` = median(tbl$Casos),
  check.names = FALSE
)

kable(resumen, format = "html", row.names = FALSE) %>%
  kable_styling(bootstrap_options = c("striped", "hover"), 
                full_width = FALSE)
```

# Análisis Bivariado

- 1. **Por Año del hecho (tendencia anual)**

```{r}
#| label: Tendencia Anual
#| echo: false
#| message: false
#| warning: false
library(dplyr)
library(ggplot2)
library(scales)

# Preparar datos
datos_año <- df %>%
  filter(!is.na(a_o_del_hecho)) %>%
  mutate(a_o_del_hecho = as.integer(a_o_del_hecho)) %>%
  count(a_o_del_hecho, name = "casos") %>%
  arrange(a_o_del_hecho) %>%
  mutate(
    porcentaje = casos / sum(casos),
    etiqueta = paste0(format(casos, big.mark = ".", decimal.mark = ","), 
                      "\n(", scales::percent(porcentaje, accuracy = 0.1), ")")
  )

# Calcular total para ajustar posición de etiquetas
total <- sum(datos_año$casos)

# Gráfico
ggplot(datos_año, aes(x = factor(a_o_del_hecho), y = casos)) +
  geom_bar(stat = "identity", fill = "royalblue", color = "black", linewidth = 0.3) +
  geom_text(aes(label = etiqueta), 
            vjust = -0.3, 
            size = 3.5,
            lineheight = 0.9) +
  labs(title = "Casos por Año",
       x = "Año",
       y = "Cantidad de Casos") +
  scale_y_continuous(labels = label_comma(big.mark = ".", decimal.mark = ","),
                     expand = expansion(mult = c(0, 0.15))) +
  theme_minimal() +
  theme(
    axis.text.x = element_text(angle = 45, hjust = 1),
    panel.grid.major.x = element_blank(),
    panel.grid.minor = element_blank()
  )
```

El análisis de la tendencia anual de los casos de suicidio en Colombia entre 2015 y 2023 revela un patrón dinámico con fluctuaciones significativas a lo largo del periodo.

- 2. **Por Departamento (Top 10)**

```{r}
#| label: Top 10
#| echo: false
#| message: false
#| warning: false
library(dplyr)
library(ggplot2)
library(scales)
library(stringr)

# Obtener los 10 departamentos con más casos
top_10_dpto <- df %>%
  count(departamento_del_hecho_dane, sort = TRUE) %>%
  head(10) %>%
  pull(departamento_del_hecho_dane)

# Preparar datos
datos_dpto <- df %>%
  filter(departamento_del_hecho_dane %in% top_10_dpto) %>%
  count(departamento_del_hecho_dane, name = "casos") %>%
  arrange(desc(casos)) %>%
  mutate(
    departamento_del_hecho_dane = factor(departamento_del_hecho_dane, 
                                          levels = rev(departamento_del_hecho_dane)),
    porcentaje = casos / sum(casos),
    etiqueta = paste0(format(casos, big.mark = ".", decimal.mark = ","), 
                      " (", scales::percent(porcentaje, accuracy = 0.1), ")")
  )

# Calcular total para ajustar posición de etiquetas
total <- sum(datos_dpto$casos)

# Gráfico
ggplot(datos_dpto, aes(x = casos, y = departamento_del_hecho_dane)) +
  geom_bar(stat = "identity", fill = "royalblue", color = "black", linewidth = 0.3) +
  geom_text(aes(label = etiqueta), 
            hjust = -0.05, 
            size = 3.5,
            color = "black") +
  labs(title = "Top 10 Departamentos con Más Casos",
       x = "Cantidad de Casos",
       y = "Departamento") +
  scale_x_continuous(labels = label_comma(big.mark = ".", decimal.mark = ","),
                     expand = expansion(mult = c(0, 0.15))) +
  theme_minimal() +
  theme(
    panel.grid.major.y = element_blank(),
    panel.grid.minor = element_blank()
  )
```

- Las tres primeras regiones, Antioquia (24,5%) , Bogotá (21,1%) y Valle del Cauca (12,9%) , acumulan en conjunto casi el 60% del total. A partir de ahí, las cifras descienden notablemente en los demás departamentos del top 10. Se observa que Atlántico se encuentra en la octava posición de esta clasificación, con 809 casos, representando el 5.1% del total mostrado.

- 3. **Gráfico de barras horizontales para grupo edad de la victima**

```{r}
#| label: Gráfica de Barras Horizontales por edad
#| echo: false
#| message: false
#| warning: false
library(dplyr)
library(ggplot2)
library(scales)

# Preparar datos
datos_edad <- df %>%
  count(grupo_de_edad_de_la_victima, name = "casos") %>%
  arrange(desc(casos)) %>%
  mutate(
    grupo_de_edad_de_la_victima = factor(grupo_de_edad_de_la_victima, 
                                          levels = rev(grupo_de_edad_de_la_victima)),
    porcentaje = casos / sum(casos),
    etiqueta = paste0(format(casos, big.mark = ".", decimal.mark = ","), 
                      " (", scales::percent(porcentaje, accuracy = 0.1), ")")
  )

# Calcular total
total <- sum(datos_edad$casos)

# Gráfico
ggplot(datos_edad, aes(x = casos, y = grupo_de_edad_de_la_victima)) +
  geom_bar(stat = "identity", fill = "royalblue", color = "black", linewidth = 0.3) +
  geom_text(aes(label = etiqueta), 
            hjust = -0.05, 
            size = 3.5,
            color = "black") +
  labs(title = "Casos por Grupo de Edad de la Víctima",
       x = "Cantidad de Casos",
       y = "Grupo de Edad") +
  scale_x_continuous(labels = label_comma(big.mark = ".", decimal.mark = ","),
                     expand = expansion(mult = c(0, 0.15))) +
  theme_minimal() +
  theme(
    plot.title = element_text(size = 16, face = "bold"),
    panel.grid.major.y = element_blank(),
    panel.grid.minor = element_blank()
  )
```

- El grupo de 20 a 24 años es el más afectado, representando el 14,5% del total. De hecho, el rango de edad entre 20 y 34 años acumula más de un tercio (35,3%) de todos los casos . También se observa una incidencia notable en adolescentes (15-19 años). A partir de la adultez joven, la frecuencia de los hechos tiende a disminuir progresivamente a medida que aumenta la edad.

- 4. **Sexo vs Grupo de edad**

```{r}
#| label: Sexo vs Grupo de Edad
#| echo: false
#| message: false
#| warning: false
library(dplyr)
library(ggplot2)
library(scales)
library(tidyr)

# Preparar datos
datos_edad_sexo <- df %>%
  count(grupo_de_edad_de_la_victima, sexo_de_la_victima, name = "casos") %>%
  group_by(grupo_de_edad_de_la_victima) %>%
  mutate(total_edad = sum(casos)) %>%
  ungroup() %>%
  arrange(desc(total_edad), grupo_de_edad_de_la_victima)

# Orden de grupos de edad por frecuencia total
order <- datos_edad_sexo %>%
  distinct(grupo_de_edad_de_la_victima, total_edad) %>%
  arrange(desc(total_edad)) %>%
  pull(grupo_de_edad_de_la_victima)

datos_edad_sexo <- datos_edad_sexo %>%
  mutate(
    grupo_de_edad_de_la_victima = factor(grupo_de_edad_de_la_victima, 
                                          levels = rev(order)),
    porcentaje = casos / sum(casos),
    etiqueta = paste0(format(casos, big.mark = ".", decimal.mark = ","), 
                      " (", scales::percent(porcentaje, accuracy = 0.1), ")")
  )

# Calcular posiciones para etiquetas (centro de cada barra apilada)
datos_edad_sexo <- datos_edad_sexo %>%
  arrange(grupo_de_edad_de_la_victima, sexo_de_la_victima) %>%
  group_by(grupo_de_edad_de_la_victima) %>%
  mutate(
    pos_label = cumsum(casos) - casos/2
  ) %>%
  ungroup()

# Gráfico
ggplot(datos_edad_sexo, aes(x = casos, y = grupo_de_edad_de_la_victima, 
                             fill = sexo_de_la_victima)) +
  geom_bar(stat = "identity", position = "stack", color = "black", linewidth = 0.3) +
  geom_text(aes(x = pos_label, label = etiqueta), 
            size = 3,
            color = "black") +
  scale_fill_manual(values = c("#1f77b4", "#9edae5")) +
  labs(title = "Casos por Grupo de Edad y Sexo",
       x = "Cantidad de Casos",
       y = "Grupo de Edad",
       fill = "Sexo") +
  scale_x_continuous(labels = label_comma(big.mark = ".", decimal.mark = ","),
                     expand = expansion(mult = c(0, 0.05))) +
  theme_minimal() +
  theme(
    panel.grid.major.y = element_blank(),
    panel.grid.minor = element_blank(),
    legend.position = "right"
  )
```

- En mujeres (barras oscuras), la incidencia de casos se concentra de forma aguda en la adolescencia y la adultez joven, con el pico más alto entre los 15 y 24 años .

- En hombres (barras claras), aunque el riesgo está presente en todas las edades, la frecuencia máxima se desplaza significativamente hacia la mediana edad, alcanzando su pico en el grupo de 40 a 44 años .

- 5. **Boxplot de edad por sexo**

```{r}
#| label: Boxplot Edad por Sexo
#| echo: false
#| message: false
#| warning: false
library(dplyr)
library(ggplot2)
library(stringr)

# Función para normalizar nombres
norm <- function(s) {
  s <- str_trim(tolower(s))
  s <- iconv(s, to = "ASCII//TRANSLIT")
  s <- str_replace_all(s, " ", "_")
  return(s)
}

# Normalizar nombres de columnas
names(df) <- sapply(names(df), norm)

# Encontrar columnas correctas
sexo_col <- grep("sexo", names(df), value = TRUE)[1]
edad_col <- grep("edad", names(df), value = TRUE)
edad_col <- edad_col[!grepl("grupo", edad_col)][1]

# Crear base limpia
base <- df %>%
  select(sexo = all_of(sexo_col), edad = all_of(edad_col))

# Limpiar datos de sexo
base <- base %>%
  mutate(sexo = str_trim(as.character(sexo)) %>% str_to_title())

# Limpiar datos de edad
base <- base %>%
  mutate(edad = str_extract(as.character(edad), "\\d+") %>% as.numeric())

# Filtrar edades válidas
base <- base %>%
  filter(edad >= 0, edad <= 100) %>%
  drop_na()

# Calcular estadísticas por sexo
stats_sexo <- base %>%
  group_by(sexo) %>%
  summarise(
    n = n(),
    media = mean(edad),
    mediana = median(edad),
    desv_est = sd(edad),
    .groups = 'drop'
  ) %>%
  arrange(desc(n))

# Crear etiquetas con n
base <- base %>%
  left_join(stats_sexo %>% select(sexo, n), by = "sexo") %>%
  mutate(sexo_label = paste0(sexo, "  (n=", format(n, big.mark = ".", decimal.mark = ","), ")"))

# Gráfico boxplot
ggplot(base, aes(x = edad, y = reorder(sexo_label, -n))) +
  geom_boxplot(notch = TRUE,
               outlier.shape = NA,  # No mostrar outliers
               fill = "#e9eef3",
               color = "#2b2b2b",
               linewidth = 0.6) +
  stat_summary(fun = mean, geom = "line", aes(group = 1), 
               color = "#666666", linewidth = 1.2, linetype = "dashed") +
  stat_summary(fun = median, geom = "point", 
               color = "#1a1a1a", size = 2) +
  geom_text(data = stats_sexo %>% 
              mutate(sexo_label = paste0(sexo, "  (n=", format(n, big.mark = ".", decimal.mark = ","), ")")),
            aes(x = mediana, y = sexo_label, label = paste0("med=", round(mediana, 1))),
            vjust = -0.8, hjust = 0.5, size = 3) +
  labs(title = "Edad por sexo — Presuntos suicidios, Colombia 2015–2023",
       x = "Edad (años)",
       y = "Sexo") +
  scale_x_continuous(limits = c(0, 90), breaks = seq(0, 90, 10)) +
  theme_minimal() +
  theme(
    panel.grid.major.y = element_blank(),
    panel.grid.major.x = element_line(color = "grey80"),
    panel.grid.minor = element_blank(),
    axis.line.y = element_line(color = "black"),
    plot.title = element_text(size = 11)
  )

# Imprimir estadísticas
cat("\nEstadísticas por sexo:\n")
for (i in 1:nrow(stats_sexo)) {
  cat(sprintf("\n%s:\n", stats_sexo$sexo[i]))
  cat(sprintf("n = %s\n", format(stats_sexo$n[i], big.mark = ".")))
  cat(sprintf("Media = %.1f\n", stats_sexo$media[i]))
  cat(sprintf("Mediana = %.1f\n", stats_sexo$mediana[i]))
  cat(sprintf("Desv. Est. = %.1f\n", stats_sexo$desv_est[i]))
}
```

El Boxplot segmentado por sexo permite comparar la distribución de edades entre hombres y mujeres en los casos de suicidio en Colombia entre 2015 y 2023. A continuación, se describen las características principales de cada grupo:

1. *Hombres* (n=18,928 casos)

  - Edad Mediana (med=35.0): El valor central es de 35 años. Esto significa que el 50% de los hombres tenían 35 años o menos, y el otro 50% tenían 35 años o más.

  - Concentración de Casos (La Caja): El 50% central de los casos se concentra en un rango de edad que va aproximadamente desde los 24 hasta los 50 años. Esta es la franja de edad más común para este suceso en hombres.

  - Rango Total (Los Bigotes): Las edades se extienden en un rango muy amplio, desde la adolescencia temprana (alrededor de los 10 años) hasta la vejez (cerca de los 80 años).

2. *Mujeres* (n=4,616 casos)

  - Edad Mediana (med=25.0): La edad mediana para las mujeres es de 25 años, es decir, 10 años más joven que la de los hombres.

  - Concentración de Casos (La Caja): El 50% central de los casos se agrupa en un rango de edad más joven y más compacto que en los hombres, aproximadamente entre los 19 y los 40 años.

  - Rango Total (Los Bigotes): Al igual que en los hombres, el rango es amplio, pero parece tener un límite superior ligeramente menor, llegando hasta aproximadamente los 70 años.

- 6. **Tabla: Razones más comunes del suicidio**

```{r}
#| label: Tabla Razones
#| echo: false
#| message: false
#| warning: false
cat("Top 10 razones del suicidio:\n\n")

top_razones <- df %>%
  count(razon_del_suicidio, sort = TRUE, name = "Frecuencia") %>%
  head(10)

print(top_razones)
```


